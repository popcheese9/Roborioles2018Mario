// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
#include "ctre/Phoenix.h"
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<WPI_TalonSRX> RobotMap::driveBaseLeftMotor1;
std::shared_ptr<WPI_TalonSRX> RobotMap::driveBaseRightMotor1;
std::shared_ptr<frc::DifferentialDrive> RobotMap::driveBaseDiffDrive;
std::shared_ptr<WPI_TalonSRX> RobotMap::driveBaseLeftMotor2;
std::shared_ptr<WPI_TalonSRX> RobotMap::driveBaseRightMotor2;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    frc::LiveWindow *lw = frc::LiveWindow::GetInstance();

    driveBaseLeftMotor1.reset(new WPI_TalonSRX(1));
    
    
    driveBaseRightMotor1.reset(new WPI_TalonSRX(3));
    
    
    driveBaseDiffDrive.reset(new frc::DifferentialDrive(*driveBaseLeftMotor1, *driveBaseRightMotor1));
    lw->AddActuator("DriveBase", "DiffDrive", driveBaseDiffDrive);
    driveBaseDiffDrive->SetSafetyEnabled(true);
        driveBaseDiffDrive->SetExpiration(0.1);
        driveBaseDiffDrive->SetMaxOutput(1.0);

    driveBaseLeftMotor2.reset(new WPI_TalonSRX(2));
    
    
    driveBaseRightMotor2.reset(new WPI_TalonSRX(4));
    
    

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
